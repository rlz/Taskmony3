type Query {
  tasks(
    id: [ID!]
    directionId: [ID]
    withNotificationsAfter: String
    offset: Int
    limit: Int
  ): [Task!]
 
  ideas(
    id: [ID!]
    directionId: [ID]
    withNotificationsAfter: String
    offset: Int
    limit: Int
  ): [Idea!]

  users(
    id: [ID!]
    email: [String!]
    login: [String!]
    offset: Int
    limit: Int
  ): [User!]

  directions(id: [ID!]): [Direction!]
}

type Mutation {
  taskAdd(
    description: String!
    details: String
    assigneeId: ID
    directionId: ID
    startAt: String!
  ): Task

  ideaAdd(
    description: String!
    details: String
    directionId: ID
    generation: Generation!
  ): Idea

  directionAdd(
    name: String!
    details: String
  ): Direction

  tasksGenerate(
    description: String!
    details: String
    assigneeId: ID
    directionId: ID
    startAt: String!
    repeatMode: RepeatMode!
    repeatEvery: Int
    numberOfRepetitions: Int!
  ): [ID!]

  taskAddComment(taskId: ID!, text: String!): Comment
  ideaAddComment(ideaId: ID!, text: String!): Comment 

  taskSetDescription(taskId: ID!, description: String!): ID
  taskSetDetails(taskId: ID!, details: String): ID
  taskSetDirection(taskId: ID!, directionId: ID): ID
  taskSetDeletedAt(taskId: ID!, deletedAt: String): ID
  taskSetAssignee(taskId: ID!, assigneeId: ID): ID
  taskSetStartAt(taskId: ID!, startAt: String): ID
  taskSetCompletedAt(taskId: ID!, completedAt: String): ID
  taskRecurringDeleteAll(groupId: ID!): [ID!]

  ideaSetDescription(ideaId: ID!, description: String!): ID
  ideaSetDetails(entityId: ID!, details: String): ID
  ideaSetDirection(ideaId: ID!, directionId: ID): ID
  ideaSetDeletedAt(ideaId: ID!, deletedAt: String): ID
  ideaSetGeneration(ideaId: ID!, generation: Generation!): ID
  ideaSetReviewedAt(ideaId: ID!, reviewedAt: String): ID

  commentSetText(commentId: ID!, text: String!): ID

  directionSetName(directionId: ID!, name: String!): ID
  directionSetDetails(directionId: ID!, details: String): ID
  directionAddMember(directionId: ID!, userId: ID!): ID
  directionRemoveMember(directionId: ID!, userId: ID!): ID

  userSetNotificationReadTime(notificationReadTime: String!): ID
  userSetLogin(login: String!): ID
  userSetDisplayName(displayName: String!): ID
  userSetEmail(email: String!): ID
  userSetPassword(password: String!): ID

  taskSubscribe(taskId: ID!): ID
  ideaSubscribe(ideaId: ID!): ID

  taskUnsubscribe(taskId: ID!): ID
  ideaUnsubscribe(ideaId: ID!): ID
}

enum RepeatMode {
  DAY
  WEEK
  MONTH
  YEAR
  CUSTOM
}

type Task {
  id: ID!
  description: String
  details: String
  createdBy: User
  assignee: User
  startAt: String
  completedAt: String
  direction: Direction
  createdAt: String
  deletedAt: String
  comments: [Comment!]
  subscribers: [User!]
  repeatMode: RepeatMode
  repeatEvery: Int
  numberOfRepetitions: Int
  groupId: ID
  notifications(
    start: String
    end: String
  ): [Notification!]
}

enum Generation {
  HOT
  LATER
  TOO_GOOD_TO_DELETE
}

type Idea {
  id: ID!
  description: String
  details: String
  generation: Generation
  createdBy: User
  direction: Direction
  createdAt: String
  deletedAt: String
  reviewedAt: String
  comments: [Comment!]
  subscribers: [User!]
  notifications(
    start: String
    end: String
  ): [Notification!]
}

type User {
  id: ID!
  login: String
  password: String
  displayName: String
  email: String
  notificationReadTime: String
  tasks: [Task!]
  ideas: [Idea!]
  directions: [Direction!]
}

type Comment {
  id: ID!
  author: User
  createdAt: String
  text: String
}

type Direction {
  id: ID!
  name: String
  details: String
  owner: User
  createdAt: String
  members: [User!]
  tasks: [Task!]
  ideas: [Idea!]
  notifications(
    start: String
    end: String
  ): [Notification!]
}

enum ActionType {
  """
  Task added to the direction
  """
  TASK_ADDED
  """
  Task deleted (from the direction or subscribed task)
  """
  TASK_DELETED
  """
  Task assigned to the user
  """
  TASK_ASSIGNED
  """
  Idea added to the direction
  """
  IDEA_ADDED
  """
  Idea deleted (from the direction or subscribed idea)
  """
  IDEA_DELETED
  """
  Member added to the direction
  """
  MEMBER_ADDED
  """
  Comment added to the task or idea
  """
  COMMENT_ADDED
  """
  Task, idea or direction updated
  """
  ITEM_UPDATED
}

union ActionItem = User | Task | Idea | Comment

type Notification {
  id: ID!
  modifiedAt: String
  actor: User           
  actionType: ActionType
  field: String
  oldValue: String
  newValue: String
  actionItem: ActionItem
}
